"use strict";

exports.__esModule = true;
exports.default = traverse;

var _babylon = require("babylon");

var _traverse2 = _interopRequireWildcard(require("@babel/traverse"));

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function buildCodeFrameError(node, message, Error) {
  // eslint-disable-next-line no-underscore-dangle
  var loc = node && (node.loc || node._loc);

  if (loc) {
    return new Error(message + " (" + loc.start.line + ":" + loc.start.column + ")");
  }

  return new Error(message);
}

function parseSource(src) {
  return (0, _babylon.parse)(src, {
    sourceType: 'module',
    plugins: ['asyncFunctions', 'jsx', 'flow', 'classConstructorCall', 'doExpressions', 'trailingFunctionCommas', 'objectRestSpread', 'decorators', 'classProperties', 'exportExtensions', 'exponentiationOperator', 'asyncGenerators', 'functionBind', 'functionSent']
  });
}

function traverse(source, visitors, opts) {
  var ast = parseSource(source); // https://github.com/babel/babel/issues/4640

  var hub = new _traverse2.Hub({
    buildCodeFrameError: buildCodeFrameError
  });

  var path = _traverse2.NodePath.get({
    hub: hub,
    parentPath: null,
    parent: ast,
    container: ast,
    key: 'program'
  });

  return (0, _traverse2.default)(ast, visitors, path.setContext().scope, {
    opts: opts
  });
}